{"version":3,"sources":["index.js"],"names":["initServer","port","app","Koa","use","errorCatcher","FileService","getRoutersFromDir","__dirname","listen","getPort","args","p","logger","warn","info","start","cFonts","say","letterSpacing","space","colors","RedisService","connect","DBService","checkTables","PluginService","loadPlugins","DBInstance","e","error","process","exit","on"],"mappings":"mDAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8E;;AAEA,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAMC,GAAG,GAAG,IAAIC,YAAJ,EAAZ;AACAD,EAAAA,GAAG,CAACE,GAAJ,CAAQ,uBAAR;AACAF,EAAAA,GAAG,CAACE,GAAJ,CAAQC,qBAAR;AACAC,uBAAYC,iBAAZ,CAA8B,mBAAQC,SAAR,EAAmB,aAAnB,CAA9B,EAAiEN,GAAjE;AACAA,EAAAA,GAAG,CAACO,MAAJ,CAAWR,IAAX;AACD;;AAED,SAASS,OAAT,GAAmB;AACjB,QAAMC,IAAI,GAAG,8BAAb;AACA,MAAIV,IAAI,GAAG,IAAX;AACA,MAAI,CAACU,IAAI,CAACC,CAAN,IAAW,CAACD,IAAI,CAACV,IAArB,EAA2B;AACzBY,oBAAOC,IAAP,CAAa,gDAA+Cb,IAAK,EAAjE;AACD,GAFD,MAEO;AACLA,IAAAA,IAAI,GAAG,EAAEU,IAAI,CAACC,CAAL,IAAUD,IAAI,CAACV,IAAjB,CAAP;AACAY,oBAAOE,IAAP,CAAa,iBAAgBd,IAAK,EAAlC;AACD;AACD,SAAOA,IAAP;AACD,C;;AAEce,K,wFAAf,aAAuB;AACrB,QAAI;AACFC,sBAAOC,GAAP,CAAW,QAAX,EAAqB;AACnBC,QAAAA,aAAa,EAAE,CADI;AAEnBC,QAAAA,KAAK,EAAE,KAFY;AAGnBC,QAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,OAAX,CAHW,EAArB;;AAKAJ,sBAAOC,GAAP,CAAW,OAAX,EAAoB;AAClBC,QAAAA,aAAa,EAAE,CADG;AAElBC,QAAAA,KAAK,EAAE,KAFW;AAGlBC,QAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,OAAX,CAHU,EAApB;;AAKA,2BAAWR,gBAAOE,IAAP,CAAY,qCAAZ,CAAX;AACA,YAAMO,sBAAaC,OAAb,EAAN;AACA,YAAMC,mBAAUC,WAAV,EAAN;AACA,YAAMC,uBAAcC,WAAd,CAA0BH,mBAAUI,UAApC,CAAN;AACA5B,MAAAA,UAAU,CAACU,OAAO,EAAR,CAAV;AACD,KAhBD,CAgBE,OAAOmB,CAAP,EAAU;AACVhB,sBAAOiB,KAAP,CAAaD,CAAb;AACAE,MAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD;AACF,G;;AAEDD,OAAO,CAACE,EAAR,CAAW,OAAX,EAAoBH,KAAK,IAAIjB,gBAAOiB,KAAP,CAAaA,KAAb,CAA7B;AACAd,KAAK","sourcesContent":["import { resolve } from 'path';\nimport Koa from 'koa';\nimport koaBody from 'koa-body';\nimport cFonts from 'cfonts';\n\nimport { getProcessArgv } from './utils/process';\nimport errorCatcher from './middlewares/error-catcher';\nimport logger from './utils/logger';\nimport { isDev } from './utils/env';\nimport RedisService from './services/redis-service';\nimport DBService from './services/db-service';\nimport PluginService from './services/plugin-service';\nimport FileService from './services/file-service';\n\nfunction initServer(port) {\n  const app = new Koa();\n  app.use(koaBody());\n  app.use(errorCatcher);\n  FileService.getRoutersFromDir(resolve(__dirname, 'controllers'), app);\n  app.listen(port);\n}\n\nfunction getPort() {\n  const args = getProcessArgv();\n  let port = 3000;\n  if (!args.p && !args.port) {\n    logger.warn(`did not find port settings, use default port ${port}`);\n  } else {\n    port = +(args.p || args.port);\n    logger.info(`start at port ${port}`);\n  }\n  return port;\n}\n\nasync function start() {\n  try {\n    cFonts.say('japari', {\n      letterSpacing: 2,\n      space: false,\n      colors: ['yellow', 'green']\n    });\n    cFonts.say('admin', {\n      letterSpacing: 2,\n      space: false,\n      colors: ['yellow', 'green']\n    });\n    isDev() && logger.info('******** now in debug mode ********');\n    await RedisService.connect();\n    await DBService.checkTables();\n    await PluginService.loadPlugins(DBService.DBInstance);\n    initServer(getPort());\n  } catch (e) {\n    logger.error(e);\n    process.exit(1);\n  }\n}\n\nprocess.on('error', error => logger.error(error));\nstart();\n"],"file":"index.js","sourceRoot":"/Users/zcwsr/my/japari-admin/src"}