{"version":3,"sources":["services/db-service.js"],"names":["DBService","constructor","DBInstance","client","connection","filename","Config","DB","filePath","debug","useNullAsDefault","createGroupConfigTable","table","bigInteger","primary","string","createOSUBindTable","increments","integer","createOSUMapTable","text","createPluginGroupConfigTable","checkTables","Promise","all","logger","info","isTableExist","name","hasTable","schema","getGroupConfig","groupId","result","first","select","where","JSON","parse","config","insertGroupConfig","insert","group_id","stringify","updateGroupConfig","update","getAllGroupPluginConfig","pluginList","getGroupPluginConfig","insertGroupPluginConfig","listString","join","plugin_list","updateGroupPluginConfig","withTransaction"],"mappings":"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","sourcesContent":["import knex from 'knex';\nimport { isDev } from '../utils/env';\nimport Config from '../config';\nimport logger from '../utils/logger';\nimport { createWithLog, withTransaction } from '../decorators/db';\n\nclass DBService {\n  constructor() {\n    this.DBInstance = knex({\n      // client: 'mysql',\n      // connection: {\n      //   host: Config.DB.DB_HOST,\n      //   user: Config.DB.DB_USER,\n      //   password: Config.DB.DB_PW,\n      //   database: Config.DB.DB_SCHAME\n      // },\n      client: 'sqlite3',\n      connection: {\n        filename: Config.DB.filePath\n      },\n      debug: isDev(),\n      useNullAsDefault: true\n    });\n  }\n\n  // qq群配置信息\n  @createWithLog('group_config')\n  createGroupConfigTable(table) {\n    table.bigInteger('group_id').primary();\n    table.string('config');\n  }\n\n  // osu 用户数据绑定\n  @createWithLog('osu_bind')\n  createOSUBindTable(table) {\n    table.increments('id').primary();\n    table.bigInteger('user_id');\n    table.bigInteger('group_id');\n    table.bigInteger('osu_id');\n    table.string('osu_name');\n    table.integer('mode');\n  }\n\n  // osu 地图信息\n  @createWithLog('osu_map')\n  createOSUMapTable(table) {\n    table.bigInteger('id').primary();\n    table.text('map');\n  }\n\n  // 群插件配置信息\n  @createWithLog('plugin_group_config')\n  createPluginGroupConfigTable(table) {\n    table.bigInteger('group_id').primary();\n    table.string('plugin_list');\n  }\n\n  // // 指令插件群可用指令配置\n  // @createWithLog('order_plugin_group_config')\n  // createOrderPluginConfigTable(table) {\n  //   table.bigInteger('group_id');\n  //   table.text('order_list');\n  // }\n\n  async checkTables() {\n    await Promise.all([\n      this.createGroupConfigTable(),\n      this.createOSUBindTable(),\n      this.createOSUMapTable(),\n      this.createPluginGroupConfigTable()\n    ]);\n    logger.info('all table prepared');\n  }\n\n  async isTableExist(name) {\n    const hasTable = await this.DBInstance.schema.hasTable(name);\n    return hasTable;\n  }\n\n  /**\n   * 获取群通用配置\n   * @param { knex } table\n   */\n  @withTransaction\n  async getGroupConfig(table, groupId) {\n    const result = await table('group_config')\n      .first()\n      .select('config')\n      .where('group_id', groupId);\n    return result ? JSON.parse(result.config) : null;\n  }\n\n  /**\n   * 插入群通用配置\n   * @param { knex } table\n   */\n  @withTransaction\n  async insertGroupConfig(table, groupId, config) {\n    await table('group_config')\n      .insert({ group_id: groupId, config: JSON.stringify(config) })\n      .where('group_id', groupId);\n  }\n\n  /**\n   * 更新群通用配置\n   * @param { knex } table\n   */\n  @withTransaction\n  async updateGroupConfig(table, groupId, config) {\n    await table('group_config')\n      .update('config', JSON.stringify(config))\n      .where('group_id', groupId);\n  }\n\n  // 群插件配置操作\n  /**\n   * 获取全部群插件配置\n   * @param { knex } table\n   */\n  @withTransaction\n  getAllGroupPluginConfig(table) {\n    return table('plugin_group_config').select({\n      groupId: 'group_id',\n      pluginList: 'plugin_list'\n    });\n  }\n\n  /**\n   * 获取群插件配置\n   * @param { knex } table\n   */\n  @withTransaction\n  async getGroupPluginConfig(table, groupId) {\n    const result = await table('plugin_group_config')\n      .first()\n      .select({ pluginList: 'plugin_list' })\n      .where('group_id', groupId);\n    return (result || {}).pluginList;\n  }\n\n  /**\n   * 插入群插件配置\n   * @param { knex } table\n   */\n  @withTransaction\n  insertGroupPluginConfig(table, groupId, pluginList) {\n    const listString = pluginList.join(' ');\n    return table('plugin_group_config').insert({\n      group_id: groupId,\n      plugin_list: listString\n    });\n  }\n\n  /**\n   * 更新群插件配置\n   * @param { knex } table\n   */\n  @withTransaction\n  updateGroupPluginConfig(table, groupId, pluginList) {\n    const listString = pluginList.join(' ');\n    return table('plugin_group_config')\n      .update('plugin_list', listString)\n      .where('group_id', groupId);\n  }\n}\n\nexport default new DBService();\n"],"file":"db-service.js","sourceRoot":"/Users/zcwsr/my/japari-admin/src"}