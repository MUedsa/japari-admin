{"version":3,"sources":["services/osu-service.js"],"names":["GET_USER_URL","GET_BP_URL","GET_MAP_URL","GET_RECENT_URL","GET_OSU_FILE_UTL","modeMap","dbInstance","serviceInstance","OSUService","instance","setDBInstance","getInstance","fetch","url","params","config","retryTimes","meta","Object","assign","k","Config","OSU_APP_KEY","timeout","e","logger","error","toString","data","getBoundInfo","groupId","userId","where","group_id","user_id","first","getUserByName","osuName","mode","users","u","type","length","message","warn","bindOSUId","isBind","user","update","osu_id","osu_name","insert","info","unBindOSUId","del","getBP","userInfo","index","playInfos","osuId","m","limit","playInfo","reverse","mapsInfo","b","beatmap_id","mapInfo","getRecent","getMap","mapId","Buffer","from","map","responseType","mapZip","id","getPP","beatMapId","enabledMods","enabled_mods","maxcombo","countmiss","count50","count100","count300","mapString","parser","OSU","feed","stars","diff","calc","mods","pp","ppv2","combo","nmiss","n50","n100","n300","acc","computed_accuracy","value","total","toFixed","sendInfo","prefix","ppInfo","QQService","sendGroupMessage","score","rank","beatmapsetId","beatmapset_id","artist","title","title_unicode","artist_unicode","version","creator","parseFloat","ar","od","cs","hp","ncircles","nsliders","nspinners","join","max_combo"],"mappings":"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","sourcesContent":["import { deflateSync, unzipSync } from 'zlib';\nimport axios from 'axios';\n\nimport * as OSU from 'ojsama';\nimport QQService from './qq-service';\nimport Config from '../config';\nimport logger from '../utils/logger';\nimport { numberToOsuModes } from '../utils/osu-utils';\nimport { objKeyToSmallCamel } from '../utils/string-utils';\n\nconst GET_USER_URL = 'https://osu.ppy.sh/api/get_user';\nconst GET_BP_URL = 'https://osu.ppy.sh/api/get_user_best';\nconst GET_MAP_URL = 'https://osu.ppy.sh/api/get_beatmaps';\nconst GET_RECENT_URL = 'https://osu.ppy.sh/api/get_user_recent';\n// const GET_SCORE_URL = 'https://osu.ppy.sh/api/get_scores';\n// const GET_MATCH_URL = 'https://osu.ppy.sh/api/get_match';\nconst GET_OSU_FILE_UTL = 'https://osu.ppy.sh/osu';\n\nconst modeMap = {\n  0: 'osu!',\n  1: 'Taiko',\n  2: 'CtB',\n  3: 'osu!mania'\n};\n\nlet dbInstance = null;\nlet serviceInstance = null;\n\nexport default class OSUService {\n  instance = null;\n  static setDBInstance(instance) {\n    dbInstance = instance;\n  }\n\n  /**\n   * 获取实例\n   * @return {OSUService} 实例\n   */\n  static getInstance() {\n    if (!serviceInstance) {\n      serviceInstance = new OSUService();\n    }\n    return serviceInstance;\n  }\n\n  async fetch(url, params, config) {\n    let retryTimes = 0;\n    let meta;\n    while (retryTimes < 3) {\n      try {\n        meta = await axios({\n          url,\n          params: Object.assign(\n            {\n              k: Config.OSU_APP_KEY\n            },\n            params\n          ),\n          timeout: (3 ** (retryTimes + 1)) * 1000,\n          ...config\n        });\n        retryTimes = 10;\n      } catch (e) {\n        retryTimes += 1;\n        logger.error(`请求: ${url} 发生错误:`);\n        logger.error(e.toString());\n        logger.error(`正在进行第${retryTimes}次重试`);\n      }\n    }\n    if (retryTimes === 3) {\n      logger.error(`请求: ${url} 失败`);\n      return null;\n    }\n    return meta.data || null;\n  }\n\n  async getBoundInfo(groupId, userId) {\n    const meta = await dbInstance('osu_bind')\n      .where({ group_id: groupId, user_id: userId })\n      .first();\n    if (meta) {\n      return objKeyToSmallCamel(meta, '_');\n    }\n    return meta;\n  }\n\n  async getUserByName(osuName, mode = 0) {\n    const users = await this.fetch(GET_USER_URL, {\n      u: osuName,\n      type: 'string',\n      mode\n    });\n    if (!users || !users.length) {\n      const message = `获取玩家'${osuName}'的信息失败, ${!users ? '请求出错' : '用户不存在'}`;\n      logger.warn(message);\n      return message;\n    }\n    return users[0];\n  }\n\n  async bindOSUId(groupId, userId, osuName, mode = 0) {\n    const isBind = await this.getBoundInfo(groupId, userId);\n    const user = await this.getUserByName(osuName, mode);\n    if (typeof user === 'string') {\n      return user;\n    }\n    let message;\n    if (isBind) {\n      await dbInstance('osu_bind')\n        .update({\n          osu_id: user.user_id,\n          osu_name: osuName,\n          mode\n        })\n        .where({ user_id: userId, group_id: groupId });\n      message = `更新账号绑定为'${osuName}', 模式: ${modeMap[mode]}`;\n    } else {\n      await dbInstance('osu_bind').insert({\n        user_id: userId,\n        group_id: groupId,\n        osu_id: user.user_id,\n        osu_name: osuName,\n        mode\n      });\n      message = `账号'${osuName}'绑定成功, 模式: ${modeMap[mode]}`;\n    }\n    logger.info(`qq${userId}${message}`);\n    return message;\n  }\n\n  async unBindOSUId(groupId, userId) {\n    const isBind = await this.getBoundInfo(groupId, userId);\n    if (!isBind) {\n      const message = '未绑定任何账号, 无法解除绑定';\n      logger.warn(`qq${userId}${message}`);\n      return message;\n    }\n    await dbInstance('osu_bind')\n      .where({ group_id: groupId, user_id: userId })\n      .del();\n    return '解绑成功';\n  }\n\n  async getBP(userInfo, index) {\n    // console.log(JSON.stringify(userInfo, null, 2));\n    index = index || 1;\n    const playInfos = await this.fetch(GET_BP_URL, {\n      u: userInfo.osuId,\n      m: userInfo.mode,\n      type: 'id',\n      limit: index\n    });\n    if (!playInfos || !playInfos.length) {\n      const message = `获取${userInfo.osuName}的bp#${index}失败, ${\n        !playInfos ? '请求出错' : '不存在bp数据'\n      }, 请重试`;\n      logger.warn(message);\n      return message;\n    }\n    const playInfo = playInfos.reverse()[0];\n    const mapsInfo = await this.fetch(GET_MAP_URL, {\n      b: playInfo.beatmap_id\n    });\n    if (!mapsInfo || !mapsInfo.length) {\n      const message = `信息失败, ${!mapsInfo ? '请求出错' : 'beatmap不存在'}, 请重试`;\n      logger.warn(`获取beatmap${playInfo.beatmap_id}${message}`);\n      return `获取beatmap${message}`;\n    }\n    const mapInfo = mapsInfo[0];\n    return { playInfo: { osu_name: userInfo.osuName, ...playInfo }, mapInfo };\n  }\n\n  async getRecent(userInfo, index) {\n    index = index || 1;\n    const playInfos = await this.fetch(GET_RECENT_URL, {\n      u: userInfo.osuId,\n      m: userInfo.mode,\n      type: 'id',\n      limit: index || 1\n    });\n    if (!playInfos || !playInfos.length) {\n      const message = `获取${userInfo.osuName}的recent#${index}失败, ${\n        !playInfos ? '请求出错' : '不存在recent数据'\n      }, 请重试`;\n      logger.warn(message);\n      return message;\n    }\n    const playInfo = playInfos.reverse()[0];\n    const mapsInfo = await this.fetch(GET_MAP_URL, {\n      b: playInfo.beatmap_id\n    });\n    if (!mapsInfo || !mapsInfo.length) {\n      const message = `信息失败, ${!mapsInfo ? '请求出错' : 'beatmap不存在'}, 请重试`;\n      logger.warn(`获取beatmap${playInfo.beatmap_id}${message}`);\n      return `获取beatmap${message}`;\n    }\n    const mapInfo = mapsInfo[0];\n    return { playInfo: { osu_name: userInfo.osuName, ...playInfo }, mapInfo };\n  }\n\n  async getMap(mapId) {\n    const meta = await dbInstance('osu_map')\n      .where('id', mapId)\n      .first();\n    if (meta) {\n      return unzipSync(Buffer.from(meta.map, 'base64')).toString();\n    }\n    const map = await this.fetch(`${GET_OSU_FILE_UTL}/${mapId}`, null, { responseType: 'text' });\n    if (!map) {\n      return null;\n    }\n    const mapZip = deflateSync(map).toString('base64');\n    await dbInstance('osu_map').insert({ id: mapId, map: mapZip });\n    return map;\n  }\n\n  async getPP(info) {\n    const {\n      playInfo: {\n        beatmap_id: beatMapId,\n        enabled_mods: enabledMods,\n        maxcombo,\n        countmiss,\n        count50,\n        count100,\n        count300\n      }\n      // mapInfo\n    } = info;\n    const mapString = await this.getMap(beatMapId);\n    if (!mapString) {\n      const message = '铺面信息失败';\n      logger.warn(`获取${beatMapId}${message}, 无法计算pp`);\n      return `获取${message}, 请重试`;\n    }\n    // eslint-disable-next-line\n    const parser = new OSU.parser();\n    parser.feed(mapString);\n    const { map } = parser;\n    // eslint-disable-next-line new-cap\n    const stars = new OSU.diff().calc({\n      map,\n      mods: +enabledMods\n    });\n    const pp = OSU.ppv2({\n      stars,\n      combo: +maxcombo,\n      nmiss: +countmiss,\n      n50: +count50,\n      n100: +count100,\n      n300: +count300\n    });\n    return {\n      acc: pp.computed_accuracy.value(),\n      pp: pp.total.toFixed(2),\n      map\n    };\n  }\n\n  /**\n   *\n   * @param {string} prefix 前缀\n   * @param {{ playInfo, mapInfo }} info\n   * @param {number} group_id\n   */\n  async sendInfo(prefix, info, groupId) {\n    const ppInfo = await this.getPP(info);\n    // let hasOfflinePPCalc = true; // 是否离线计算了pp\n    if (typeof ppInfo === 'string') {\n      // hasOfflinePPCalc = false;\n      QQService.sendGroupMessage(groupId, ppInfo);\n      return;\n    }\n    const {\n      playInfo: {\n        osu_name: osuName,\n        maxcombo,\n        count50,\n        count100,\n        count300,\n        countmiss,\n        // date,\n        score,\n        rank,\n        enabled_mods: enabledMods\n      },\n      mapInfo: { beatmapset_id: beatmapsetId }\n    } = info;\n    const { acc, pp, map } = ppInfo;\n    let message = `玩家${osuName}的${prefix}\\n--------\\n`;\n    message += `${map.artist} - ${map.title}`;\n    if (map.title_unicode || map.artist_unicode) {\n      message += `(${map.artist_unicode} - ${map.title_unicode})`;\n    }\n    message += `[${map.version}] mapped by ${map.creator}\\n`;\n    message += `Url: https://osu.ppy.sh/beatmapsets/${beatmapsetId}\\n\\n`;\n    message += `AR${parseFloat(map.ar.toFixed(2))} OD${parseFloat(\n      map.od.toFixed(2)\n    )} CS${parseFloat(map.cs.toFixed(2))} HP${parseFloat(map.hp.toFixed(2))}\\n`;\n    message += `${map.ncircles} circles, ${map.nsliders} sliders, ${map.nspinners} spinners\\n\\n`;\n    message += `Score: ${score}\\n`;\n    message += `Rank: ${rank}\\n`;\n    message += `Mod: ${numberToOsuModes(enabledMods).join(' ')}\\n`;\n    message += `Acc: ${(acc * 100).toFixed(2)}%\\n`;\n    message += `Max Combo: ${maxcombo}/${map.max_combo()}\\n`;\n    message += `${count300}x300, ${count100}x100, ${count50}x50, ${countmiss}xmiss\\n`;\n    if (info.playInfo.pp) {\n      message += `${parseFloat(info.playInfo.pp).toFixed(2)} pp (官方)\\n`;\n    }\n    message += `${pp} pp (离线计算)`;\n    logger.info(`格式化玩家'${osuName}'的${prefix}数据成功`);\n    logger.info(`地图id: ${beatmapsetId}, 难度[${map.version}], ${pp} pp`);\n    QQService.sendGroupMessage(groupId, message);\n  }\n}\n"],"file":"osu-service.js","sourceRoot":"/Users/zcwsr/my/japari-admin/src"}