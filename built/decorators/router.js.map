{"version":3,"sources":["decorators/router.js"],"names":["Router","config","target","constructor","prefix","instance","router","KoaRouter","targetMethods","Object","getOwnPropertyDescriptors","prototype","keys","forEach","name","method","value","mount","logger","debug","routes","methods","Route","reduce","prev","url","middlewares","descriptor","fn","userLogic","ctx","next","res","undefined","body","toUpperCase"],"mappings":"mTAAA;AACA,iE;;AAEO,MAAMA,MAAM,GAAGC,MAAM,IAAIC,MAAM,IAAI,cAAcA,MAAd,CAAqB;AAC7DC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,UAAMC,QAAQ,GAAG,MAAMD,MAAN,CAAjB;AACA,SAAKA,MAAL,GAAcA,MAAM,KAAK,GAAX,GAAiB,IAAjB,GAAwBA,MAAtC;AACA,SAAKE,MAAL,GAAc,IAAIC,kBAAJ,iBAAgBH,MAAhB,IAA2BH,MAA3B,EAAd;AACA,UAAMO,aAAa,GAAGC,MAAM,CAACC,yBAAP,CAAiCR,MAAM,CAACS,SAAxC,CAAtB;AACAF,IAAAA,MAAM,CAACG,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAoCC,IAAD,IAAU;AAC3C,YAAMC,MAAM,GAAGP,aAAa,CAACM,IAAD,CAA5B;AACA,UAAIA,IAAI,KAAK,aAAT,IAA0B,OAAOC,MAAM,CAACC,KAAd,KAAwB,UAAtD,EAAkE;AAClEX,MAAAA,QAAQ,CAACS,IAAD,CAAR,CAAe,KAAKR,MAApB;AACD,KAJD;AAKD;;AAEDW,EAAAA,KAAK,GAAG;AACNC,oBAAOC,KAAP,CAAc,aAAY,KAAKf,MAAL,GAAe,KAAI,KAAKA,MAAO,GAA/B,GAAoC,EAAG,aAAjE;AACA,WAAO,KAAKE,MAAL,CAAYc,MAAZ,EAAP;AACD,GAhB4D,CAAxD,C;;;AAmBP,MAAMC,OAAO,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,SAAjC,EAA4C,MAA5C,EAAoD,OAApD,CAAhB;AACO,MAAMC,KAAK,GAAGD,OAAO,CAACE,MAAR,CAAe,CAACC,IAAD,EAAOT,MAAP,KAAkB;AACpDS,EAAAA,IAAI,CAACT,MAAD,CAAJ,GAAe,CAACU,GAAD,EAAM,GAAGC,WAAT,KAAyB,CAACxB,MAAD,EAASY,IAAT,EAAea,UAAf,KAA8B;AACpE,UAAMC,EAAE,GAAGD,UAAU,CAACX,KAAtB;AACA;AACAW,IAAAA,UAAU,CAACX,KAAX,GAAmB,SAASA,KAAT,GAAiB;AAClC,YAAMa,SAAS,0DAAG,WAAOC,GAAP,EAAYC,IAAZ,EAAqB;AACrC,gBAAMC,GAAG,SAASJ,EAAE,CAACE,GAAD,EAAMC,IAAN,CAApB;AACA,cAAIC,GAAG,KAAKC,SAAZ,EAAuB;AACrBH,YAAAA,GAAG,CAACI,IAAJ,GAAWF,GAAX;AACD;AACF,SALc,kBAATH,SAAS,mDAAf;AAMA,WAAKvB,MAAL,CAAYS,MAAZ,EAAoBU,GAApB,EAAyB,GAAG,CAAC,IAAGC,WAAW,IAAI,EAAlB,CAAD,EAAuBG,SAAvB,CAA5B;AACAX,sBAAOC,KAAP,CAAc,UAASJ,MAAM,CAACoB,WAAP,EAAqB,MAAK,KAAK/B,MAAL,IAAe,EAAG,GAAEqB,GAAI,UAAzE;AACD,KATD;AAUA,WAAOE,UAAP;AACD,GAdD;AAeA,SAAOH,IAAP;AACD,CAjBoB,EAiBlB,EAjBkB,CAAd,C","sourcesContent":["import KoaRouter from 'koa-router';\nimport logger from '../utils/logger';\n\nexport const Router = config => target => class extends target {\n  constructor(prefix) {\n    const instance = super(prefix);\n    this.prefix = prefix === '/' ? null : prefix;\n    this.router = new KoaRouter({ prefix, ...config });\n    const targetMethods = Object.getOwnPropertyDescriptors(target.prototype);\n    Object.keys(targetMethods).forEach((name) => {\n      const method = targetMethods[name];\n      if (name === 'constructor' || typeof method.value !== 'function') return;\n      instance[name](this.router);\n    });\n  }\n\n  mount() {\n    logger.debug(`=== router${this.prefix ? ` '${this.prefix}'` : ''} loaded ===`);\n    return this.router.routes();\n  }\n};\n\nconst methods = ['get', 'post', 'put', 'delete', 'options', 'head', 'patch'];\nexport const Route = methods.reduce((prev, method) => {\n  prev[method] = (url, ...middlewares) => (target, name, descriptor) => {\n    const fn = descriptor.value;\n    // eslint-disable-next-line space-before-function-paren\n    descriptor.value = function value() {\n      const userLogic = async (ctx, next) => {\n        const res = await fn(ctx, next);\n        if (res !== undefined) {\n          ctx.body = res;\n        }\n      };\n      this.router[method](url, ...[...middlewares || [], userLogic]);\n      logger.debug(`route [${method.toUpperCase()}] '${this.prefix || ''}${url}' loaded`);\n    };\n    return descriptor;\n  };\n  return prev;\n}, {});\n"],"file":"router.js","sourceRoot":"/Users/zcwsr/my/japari-admin/src"}